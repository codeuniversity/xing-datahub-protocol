// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	protocol.proto

It has these top-level messages:
	User
	Address
	Connection
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id              int32         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	FirstName       string        `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName        string        `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Gender          string        `protobuf:"bytes,4,opt,name=gender" json:"gender,omitempty"`
	Wants           []string      `protobuf:"bytes,5,rep,name=wants" json:"wants,omitempty"`
	Haves           []string      `protobuf:"bytes,6,rep,name=haves" json:"haves,omitempty"`
	BusinessAddress *Address      `protobuf:"bytes,7,opt,name=business_address,json=businessAddress" json:"business_address,omitempty"`
	PrimaryCompany  *User_Company `protobuf:"bytes,8,opt,name=primary_company,json=primaryCompany" json:"primary_company,omitempty"`
	Languages       []string      `protobuf:"bytes,9,rep,name=languages" json:"languages,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetWants() []string {
	if m != nil {
		return m.Wants
	}
	return nil
}

func (m *User) GetHaves() []string {
	if m != nil {
		return m.Haves
	}
	return nil
}

func (m *User) GetBusinessAddress() *Address {
	if m != nil {
		return m.BusinessAddress
	}
	return nil
}

func (m *User) GetPrimaryCompany() *User_Company {
	if m != nil {
		return m.PrimaryCompany
	}
	return nil
}

func (m *User) GetLanguages() []string {
	if m != nil {
		return m.Languages
	}
	return nil
}

type User_Company struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *User_Company) Reset()                    { *m = User_Company{} }
func (m *User_Company) String() string            { return proto.CompactTextString(m) }
func (*User_Company) ProtoMessage()               {}
func (*User_Company) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *User_Company) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *User_Company) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Address struct {
	Country string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty"`
	Zipcode string `protobuf:"bytes,2,opt,name=zipcode" json:"zipcode,omitempty"`
	City    string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	Street  string `protobuf:"bytes,4,opt,name=street" json:"street,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

type Connection struct {
	A int32 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	B int32 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *Connection) Reset()                    { *m = Connection{} }
func (m *Connection) String() string            { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()               {}
func (*Connection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Connection) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Connection) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*User_Company)(nil), "User.Company")
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*Connection)(nil), "Connection")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x41, 0x6b, 0xe3, 0x30,
	0x10, 0x85, 0x91, 0x13, 0xc7, 0xf1, 0xec, 0x6e, 0xb2, 0x88, 0xb0, 0x88, 0x6d, 0x0b, 0x26, 0x27,
	0x9f, 0x7c, 0x68, 0xa0, 0xf7, 0x92, 0x7b, 0x0f, 0x82, 0x9e, 0x83, 0x6c, 0xab, 0xa9, 0x20, 0x96,
	0x8c, 0xa4, 0xb4, 0xb8, 0x3f, 0xb4, 0xbf, 0xa7, 0x68, 0x2c, 0xd1, 0xde, 0xe6, 0x7b, 0x6f, 0x46,
	0x68, 0xde, 0xc0, 0x66, 0xb4, 0xc6, 0x9b, 0xce, 0x5c, 0x1a, 0x2c, 0xf6, 0x9f, 0x19, 0x2c, 0x9f,
	0x9d, 0xb4, 0x74, 0x03, 0x99, 0xea, 0x19, 0xa9, 0x48, 0x9d, 0xf3, 0x4c, 0xf5, 0xf4, 0x0e, 0xe0,
	0x45, 0x59, 0xe7, 0x4f, 0x5a, 0x0c, 0x92, 0x65, 0x15, 0xa9, 0x4b, 0x5e, 0xa2, 0xf2, 0x24, 0x06,
	0x49, 0x6f, 0xa0, 0xbc, 0x88, 0xe4, 0x2e, 0xd0, 0x5d, 0x07, 0x01, 0xcd, 0x7f, 0xb0, 0x3a, 0x4b,
	0xdd, 0x4b, 0xcb, 0x96, 0xe8, 0x44, 0xa2, 0x3b, 0xc8, 0xdf, 0x85, 0xf6, 0x8e, 0xe5, 0xd5, 0xa2,
	0x2e, 0xf9, 0x0c, 0x41, 0x7d, 0x15, 0x6f, 0xd2, 0xb1, 0xd5, 0xac, 0x22, 0xd0, 0x03, 0xfc, 0x6d,
	0xaf, 0x4e, 0x69, 0xe9, 0xdc, 0x49, 0xf4, 0xbd, 0x95, 0xce, 0xb1, 0xa2, 0x22, 0xf5, 0xaf, 0xfb,
	0x75, 0xf3, 0x38, 0x33, 0xdf, 0xa6, 0x8e, 0x28, 0xd0, 0x07, 0xd8, 0x8e, 0x56, 0x0d, 0xc2, 0x4e,
	0xa7, 0xce, 0x0c, 0xa3, 0xd0, 0x13, 0x5b, 0xe3, 0xcc, 0x9f, 0x26, 0x2c, 0xd9, 0x1c, 0x67, 0x91,
	0x6f, 0x62, 0x57, 0x64, 0x7a, 0x1b, 0xb6, 0xd1, 0xe7, 0xab, 0x38, 0x4b, 0xc7, 0x4a, 0xfc, 0xc6,
	0xb7, 0xf0, 0xff, 0x00, 0x45, 0x6a, 0xdc, 0x41, 0xee, 0x95, 0xbf, 0x48, 0x0c, 0xaa, 0xe4, 0x33,
	0x50, 0x0a, 0xcb, 0x1f, 0x29, 0x61, 0xbd, 0x57, 0x50, 0xa4, 0x5f, 0x31, 0x28, 0x3a, 0x73, 0xd5,
	0xde, 0x4e, 0x71, 0x2c, 0x61, 0x70, 0x3e, 0xd4, 0xd8, 0x99, 0x3e, 0xcd, 0x26, 0x0c, 0x4f, 0x76,
	0xca, 0x4f, 0x31, 0x5a, 0xac, 0x43, 0xac, 0xce, 0x5b, 0x29, 0x7d, 0x8a, 0x75, 0xa6, 0x7d, 0x0d,
	0x70, 0x34, 0x5a, 0xcb, 0xce, 0x2b, 0xa3, 0xe9, 0x6f, 0x20, 0x22, 0xde, 0x91, 0x88, 0x40, 0x2d,
	0xbe, 0x9d, 0x73, 0xd2, 0xb6, 0x2b, 0x3c, 0xfa, 0xe1, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x47, 0xf2,
	0x27, 0x15, 0x06, 0x02, 0x00, 0x00,
}
